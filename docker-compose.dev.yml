# 开发环境 Docker Compose 配置
# 版本: v4.0 Development

version: '3.8'

services:
  # 主应用服务 (开发模式)
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: analysis_report_system_dev
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:password@db:5432/analysis_db_dev
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-not-for-production
      - DEBUG=true
      - CORS_ORIGINS=["*"]
      - LOG_LEVEL=DEBUG
    volumes:
      # 开发时挂载源码目录，支持热重载
      - .:/app
      - ./output:/app/output
      - ./pdf_reports:/app/pdf_reports
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - analysis_network
    # 开发环境使用不同的启动命令，支持热重载
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # PostgreSQL 数据库 (开发环境)
  db:
    image: postgres:15-alpine
    container_name: analysis_postgres_dev
    environment:
      - POSTGRES_DB=analysis_db_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5433:5432"  # 使用不同端口避免冲突
    restart: unless-stopped
    networks:
      - analysis_network

  # Redis 缓存服务 (开发环境)
  redis:
    image: redis:7-alpine
    container_name: analysis_redis_dev
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"  # 使用不同端口避免冲突
    restart: unless-stopped
    networks:
      - analysis_network

  # 数据库管理工具 (开发环境)
  adminer:
    image: adminer:latest
    container_name: analysis_adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - analysis_network

  # Redis 管理工具 (开发环境)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: analysis_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - analysis_network

# 网络配置
networks:
  analysis_network:
    driver: bridge

# 开发环境数据卷
volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local